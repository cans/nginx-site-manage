---
# Add task to add and remove "sites"
- name: "Validate role inputs"
  assert:
    that:
      - "nginxsites_sites_present | map(attribute='site_name') | intersect(nginxsites_sites_absent | map(attribute='site_name')) | list | length == 0"
    # fail_msg: "Sites listed in `nginxsites_sites_present' and `nginxsites_sites_absent' collide (here are to colliding site names: {{ nginxsites_sites_present | map(attribute='site_name') | intersect(nginxsites_sites_absent | map(attribute='site_name')) | list | join(', ') }}"
  debugger: on_failed

- name: "Ensure NGinX sites are present"
  template:
    src: "{{ item.site_template }}"
    dest: "{{ item.site_available_dir|default(nginxsites_available_dir) }}/{{ item.site_name | basename }}"
  when: item.site_template is defined
  loop: "{{ nginxsites_sites_present }}"


- name: "Enable NGinX sites"
  file:
    src: "{{ item.site_available_dir|default(nginxsites_available_dir) }}/{{ item.site_name | basename }}"
    dest: "{{ item.site_enabled_dir|default(nginxsites_enabled_dir) }}/{{ item.site_name | basename }}"
    state: "link"
  when: "item.site_state|default('disabled') == 'enabled'"
  loop: "{{ nginxsites_sites_present }}"


- name: "Disable NGinX sites"
  file:
    dest: "{{ item.site_enabled_dir|default(nginxsites_enabled_dir) }}/{{ item.site_name | basename }}"
    state: "absent"
  when: "item.site_state|default('disabled') == 'disabled'"
  loop: "{{ nginxsites_sites_present }}"


- name: "Prune NGinX sites config"
  file:
    dest: "{{ item.site_available_dir|default(nginxsites_available_dir) }}/{{ item.site_name | basename }}"
    state: "absent"
  loop: "{{ nginxsites_sites_absent }}"

- name: "Ensure not dangling symbolic link is left behind"
  file:
    dest: "{{ item.site_enabled_dir|default(nginxsites_enabled_dir) }}/{{ item.site_name | basename }}"
    state: "absent"
  loop: "{{ nginxsites_sites_absent }}"


# vim: et:sw=2:syntax=yaml:ts=2:
